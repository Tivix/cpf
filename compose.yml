volumes:
  postgres-data:
  fusionauth-config:

services:
  proxy:
    image: tivix/docker-nginx:v18
    restart: unless-stopped
    depends_on:
      frontend:
        condition: service_healthy
      api-server:
        condition: service_healthy
    ports:
      - "8080:80"
    environment:
      - UPSTREAMS=/cpf/api:api-server:8000,/:frontend:3000
      - WEBSOCKETS=true
      - HEALTHCHECK=/health
      - HEALTHCHECK_PORT=8888
      - HEALTHCHECK_LISTEN=0.0.0.0
    healthcheck:
      test: wget -q -O /dev/null http://proxy:8888/health
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    restart: unless-stopped
    stdin_open: true
    build:
      context: ./frontend
      target: development
    volumes:
      - ./frontend/src:/code/src
      - ./frontend/public:/code/public
    ports:
      - "3000:3000"
    env_file:
      - .env
    healthcheck: # TODO: /health once available
      test: wget -q -O /dev/null http://frontend:3000/auth
      interval: 5s
      timeout: 5s
      retries: 5

  api-server:
    image: cpf/backend-image
    restart: unless-stopped
    build:
      context: ./backend
      target: dev
    command: api-server-dev
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src:/src
    stdin_open: true
    tty: true
    depends_on:
      data-loader:
        condition: service_completed_successfully
    healthcheck:
      test: wget -q -O /dev/null http://api-server:8000/cpf/api/health
      interval: 5s
      timeout: 5s
      retries: 5

  data-loader:
    image: cpf/backend-image
    restart: "no"
    build:
      context: ./backend
      target: dev
    command: data-loader
    env_file:
      - .env
    volumes:
      - ./backend/src:/src
    stdin_open: true
    tty: true

  postgres:
    build:
      context: ./backend/postgres
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test: pg_isready -U ${POSTGRES_USER} -d postgres
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data/