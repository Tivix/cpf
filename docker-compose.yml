version: "3.9"

volumes:
  postgres_data:
  fusionauth_config:
  search_data:

services:
  proxy:
    image: tivix/docker-nginx:v17
    restart: unless-stopped
    depends_on:
      - frontend
      - fusionauth
      - api-server
    ports:
      - "8080:80"
    environment:
      - UPSTREAMS=/admin:fusionauth:9011,/cpf/api:api-server:8000,/:frontend:3000
      - WEBSOCKETS=true

  frontend:
    restart: unless-stopped
    stdin_open: true
    env_file:
      - .env
    build:
      context: ./frontend
      target: development
    volumes:
      - ./frontend/src:/code/src
      - ./frontend/public:/code/public
    ports:
      - "3000:3000"

  api-server:
    image: cpf/backend-image
    restart: unless-stopped
    build:
      context: ./backend
      target: dev
    command: api-server-dev
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src:/src
    stdin_open: true
    tty: true

  data_loader:
    image: cpf/backend-image
    restart: "no"
    build:
      context: ./backend
      target: dev
    command: data-loader
    env_file:
      - .env
    volumes:
      - ./backend/src:/src
    depends_on:
      fusionauth:
        condition: service_healthy
    stdin_open: true
    tty: true

  postgres:
    build:
      context: ./backend/postgres
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  search:
    image: opensearchproject/opensearch:2.11.0
    environment:
      cluster.name: fusionauth
      discovery.type: single-node
      node.name: search
      plugins.security.disabled: true
      bootstrap.memory_lock: true
      OPENSEARCH_JAVA_OPTS: ${OPENSEARCH_JAVA_OPTS}
    healthcheck:
      interval: 10s
      retries: 80
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:9200/
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    ports:
      - 9200:9200 # REST API
      - 9600:9600 # Performance Analyzer
    volumes:
      - search_data:/usr/share/opensearch/data

  fusionauth:
    image: fusionauth/fusionauth-app:latest
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      search:
        condition: service_healthy
    healthcheck:
      test: curl -f http://localhost:9011/api/status
      start_period: 15s
      interval: 5s
      timeout: 30s
      retries: 5
    environment:
      DATABASE_URL: jdbc:postgresql://postgres:5432/fusionauth
      DATABASE_ROOT_USERNAME: ${POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_USERNAME: ${FUSIONAUTH_POSTGRES_USER}
      DATABASE_PASSWORD: ${FUSIONAUTH_POSTGRES_PASSWORD}
      FUSIONAUTH_APP_MEMORY: ${FUSIONAUTH_APP_MEMORY}
      FUSIONAUTH_APP_RUNTIME_MODE: ${FUSIONAUTH_APP_RUNTIME_MODE}
      FUSIONAUTH_APP_URL: http://fusionauth:9011
      SEARCH_SERVERS: http://search:9200
      SEARCH_TYPE: elasticsearch
      FUSIONAUTH_APP_KICKSTART_FILE: ${FUSIONAUTH_APP_KICKSTART_FILE}
    restart: unless-stopped
    ports:
      - 9011:9011
    volumes:
      - fusionauth_config:/usr/local/fusionauth/config
      - ./fusionauth/kickstart:/usr/local/fusionauth/kickstart
