version: '3.9'

volumes:
  postgres_data:
  fusionauth_config:

services:
  proxy:
    image: tivix/docker-nginx:v17
    restart: unless-stopped
    depends_on:
      - frontend
      - fusionauth
      - api-server
    ports:
      - "8080:80"
    environment:
      - UPSTREAMS=/api:fusionauth:9011,/cpf/api:api-server:8000,/:frontend:3000
      - WEBSOCKETS=true
      
  frontend:
    restart: unless-stopped
    stdin_open: true
    build:
      context: ./frontend
      target: development
    volumes:
      - ./frontend/src:/code/src
      - ./frontend/public:/code/public
    ports:
      - '3000:3000'
    env_file:
      - .env

  api-server:
    image: cpf/backend-image
    restart: unless-stopped
    build:
      context: ./backend
      target: dev
    command: api-server-dev
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./backend/src:/src
    stdin_open: true
    tty: true

  data_loader:
    image: cpf/backend-image
    restart: "no"
    build:
      context: ./backend
      target: dev
    command: data-loader
    env_file:
      - .env
    volumes:
      - ./backend/src:/src
    depends_on:
      fusionauth:
        condition: service_healthy
    stdin_open: true
    tty: true

  postgres:
    build:
      context: ./backend/postgres
    restart: unless-stopped
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  fusionauth:
    image: fusionauth/fusionauth-app:1.48.3
    ports:
      - "9011:9011"
    env_file:
      - .env
    environment:
      DATABASE_URL: "jdbc:postgresql://postgres:5432/${FUSIONAUTH_POSTGRES_DB}"
      DATABASE_ROOT_USERNAME: ${POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_USERNAME: ${FUSIONAUTH_POSTGRES_USER}
      DATABASE_PASSWORD: ${FUSIONAUTH_POSTGRES_PASSWORD}
      FUSIONAUTH_APP_MEMORY: 512m
      FUSIONAUTH_APP_RUNTIME_MODE: development
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      FUSIONAUTH_APP_URL: http://fusionauth:9011
      FUSIONAUTH_APP_KICKSTART_FILE: /usr/local/fusionauth/kickstart/kickstart.json
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: curl --silent --fail http://localhost:9011/api/status -o /dev/null -w "%{http_code}"
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - fusionauth_config:/usr/local/fusionauth/config
      - ./fusionauth/kickstart:/usr/local/fusionauth/kickstart
